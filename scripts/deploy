#!/bin/bash
# Author: LX_Gaming
# Source: https://github.com/LXGaming/OreDeploy

# Travis CI
if [[ "$TRAVIS" != true ]]; then
  echo "Invalid TRAVIS";
  exit 1;
fi

if [[ -z "$TRAVIS_BUILD_NUMBER" ]]; then
  echo "Missing TRAVIS_BUILD_NUMBER";
  exit 1;
fi

if [[ ! "$TRAVIS_JOB_NUMBER" =~ ^[0-9]+\.1$ ]]; then
  echo "Invalid TRAVIS_JOB_NUMBER";
  exit 0;
fi

if [[ "$TRAVIS_PULL_REQUEST" != false ]]; then
  echo "Invalid TRAVIS_PULL_REQUEST";
  exit 0;
fi

# Artifact
if [[ -z "$ARTIFACT_NAME" ]]; then
  echo "Missing ARTIFACT_NAME";
  exit 1;
fi

ARTIFACT_FILE=$(find build/libs/ -maxdepth 1 -type f -iname "$ARTIFACT_NAME" | head -n 1);
if [[ -z "$ARTIFACT_FILE" ]]; then
  echo "Missing ARTIFACT_FILE";
  exit 1;
fi

# SpongePowered/Ore
if [[ -z "$ORE_KEY" ]]; then
  echo "Missing ORE_KEY";
  exit 1;
fi

ORE_HOST="";
if [[ -z "$ORE_ENVIRONMENT" ]]; then
  echo "Missing ORE_ENVIRONMENT";
  exit 1;
elif [[ "${ORE_ENVIRONMENT,,}" == "production" ]]; then
  ORE_HOST="ore.spongepowered.org";
elif [[ "${ORE_ENVIRONMENT,,}" == "staging" ]]; then
  ORE_HOST="ore.stage.spongemc.org";
else
  echo "Invalid ORE_ENVIRONMENT";
  exit 1;
fi

if [[ -z "$ORE_CREATE_FORUM_POST" ]]; then
  echo "Missing ORE_CREATE_FORUM_POST";
  exit 1;
elif [[ "$ORE_CREATE_FORUM_POST" != false ]] && [[ "$ORE_CREATE_FORUM_POST" != true ]]; then
  echo "Invalid ORE_CREATE_FORUM_POST";
  exit 1;
fi

if [[ -z "$ORE_DESCRIPTION" ]]; then
  echo "Missing ORE_DESCRIPTION";
  exit 1;
fi

if [[ -z "$ORE_CHANNEL" ]]; then
  echo "Missing ORE_CHANNEL";
  exit 1;
fi

if [[ -z "$ORE_PLUGIN_ID" ]]; then
  echo "Missing ORE_PLUGIN_ID";
  exit 1;
fi

function request() {
  local response=$(curl --silent --write-out "\n%{http_code}" "$@");
  local body=$(echo "$response" | head -n -1);
  local status=$(echo "$response" | tail -n 1);

  # 200 OK, 201 Created, 204 No Content
  if [[ "$status" == 200 ]] || [[ "$status" == 201 ]] || [[ "$status" == 204 ]]; then
    echo "$body";
    return 0;
  fi

  echo "Invalid response: $body ($status)" >&2;
  return 1;
}

ORE_AUTHENTICATE_PROPERTIES=$(jq --null-input --compact-output --raw-output \
--arg key0 "expires_in" \
--argjson value0 "600" \
'. | .[$key0]=$value0');
if [[ -z "$ORE_AUTHENTICATE_PROPERTIES" ]]; then
  echo "Missing ORE_AUTHENTICATE_PROPERTIES";
  exit 1;
fi

# SpongePowered/Ore - Authenticate
# - expiresIn = 10 minutes
echo "Requesting Session Token...";
ORE_AUTHENTICATE=$(request \
--request "POST" \
--header "Accept: application/json" \
--header "Authorization: OreApi apikey=$ORE_KEY" \
--header "Content-Type: application/json" \
--data "$ORE_AUTHENTICATE_PROPERTIES" \
"https://$ORE_HOST/api/v2/authenticate");
ORE_AUTHENTICATE_STATE=$?;
if [[ -z "$ORE_AUTHENTICATE" ]] || [[ "$ORE_AUTHENTICATE_STATE" != 0 ]]; then
  exit 1;
fi

echo "Extracting Session Token...";
ORE_SESSION_KEY=$(echo "$ORE_AUTHENTICATE" | jq --raw-output ".session");
if [[ -z "$ORE_SESSION_KEY" ]]; then
  echo "Missing ORE_SESSION_KEY";
  exit 1;
fi

ORE_PLUGIN_INFO_TAGS=$(jq --null-input --compact-output --raw-output \
--arg key0 "Channel" \
--arg value0 "$ORE_CHANNEL" \
'. | .[$key0]=$value0');
if [[ -z "$ORE_PLUGIN_INFO_TAGS" ]]; then
  echo "Missing ORE_PLUGIN_INFO_TAGS";
  exit 1;
fi

ORE_PLUGIN_INFO=$(jq --null-input --compact-output --raw-output \
--arg key0 "create_forum_post" \
--argjson value0 "$ORE_CREATE_FORUM_POST" \
--arg key1 "description" \
--arg value1 "$ORE_DESCRIPTION" \
--arg key2 "tags" \
--argjson value2 "$ORE_PLUGIN_INFO_TAGS" \
'. | .[$key0]=$value0 | .[$key1]=$value1 | .[$key2]=$value2');
if [[ -z "$ORE_PLUGIN_INFO" ]]; then
  echo "Missing ORE_PLUGIN_INFO";
  exit 1;
fi

# SpongePowered/Ore - Deploy Version
echo "Uploading $ARTIFACT_FILE...";
ORE_DEPLOY=$(request \
--request "POST" \
--header "Accept: application/json" \
--header "Authorization: OreApi session=$ORE_SESSION_KEY" \
--header "Content-Type: multipart/form-data" \
--form "plugin-info=$ORE_PLUGIN_INFO" \
--form "plugin-file=@$ARTIFACT_FILE" \
"https://$ORE_HOST/api/v2/projects/$ORE_PLUGIN_ID/versions");
ORE_DEPLOY_STATE=$?;
if [[ -z "$ORE_DEPLOY" ]] || [[ "$ORE_DEPLOY_STATE" != 0 ]]; then
  exit 1;
fi

echo "$ORE_DEPLOY";

# SpongePowered/Ore - Invalidate
echo "Invalidating Session Token...";
ORE_INVALIDATE=$(request \
--request "DELETE" \
--header "Accept: application/json" \
--header "Authorization: OreApi session=$ORE_SESSION_KEY" \
"https://$ORE_HOST/api/v2/sessions/current");
ORE_INVALIDATE_STATE=$?;
if [[ -z "$ORE_INVALIDATE" ]] || [[ "$ORE_INVALIDATE_STATE" != 0 ]]; then
  exit 0;
fi

exit 0;